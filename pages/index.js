import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Switch from "react-switch";
import {useEffect, useState} from "react";
import axios from "axios";

const env = {
    api: process.env.NEXT_PUBLIC_API_URL,
    name: process.env.NEXT_PUBLIC_CONTAINER_NAME
}

export default function Home() {
    const [checked, setChecked] = useState(false);
    const [switchDisabled, setSwitchDisabled] = useState(true);
    useEffect(() => {
        getStatus()
    }, [])

    useEffect(() => {
        if(!switchDisabled){
            setSwitchDisabled(true)
            if(checked){
                axios.get(env.api + '/start')
                    .then((response) => {
                        if(response.data.message === "Container started"){
                            setSwitchDisabled(false)
                        }
                });
            }else{
                axios.get(env.api + '/stop')
                    .then((response) => {
                        if(response.data.message === "Container stopped"){
                            setSwitchDisabled(false)
                        }
                    });
            }
        }
    }, [checked])

    const getStatus = () => {
        axios.get(env.api + '/status')
            .then((response) => {
                if(response.data.message.State){
                    setChecked(response.data.message.State.Running)
                    setSwitchDisabled(false)
                }
            });
    }

  return (
    <div className={styles.container}>
      <Head>
        <title>Container Switch</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
            {env.name ? env.name : 'Docker'} Switch
        </h1>

        <p className={styles.description}>
          A simple switch for any given docker container with info of the container
        </p>

        <Switch onChange={() => setChecked(prevCheck => !prevCheck)} disabled={switchDisabled} checked={checked} />

      </main>
    </div>
  )
}
